}
}
# Get volume combinations
for (j in 1:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, volume_signal_code)
dt.alpha_list <- rbind(data.table(id=id,
code=my_alpha_final),
dt.alpha_list)
id <- id + 1
}
dt.alpha_list
library(data.table)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
parent_dir <- getwd()
alpha_list <- list.files(paste0(parent_dir, "/alpha_list"))
volatility_indicator_file_name <- paste0(parent_dir, "/indicator_list/volatility_signal.txt")
volume_indicator_file_name <- paste0(parent_dir, "/indicator_list/volume_signal.txt")
volatility_signal_code <- readChar(volatility_indicator_file_name,
file.info(volatility_indicator_file_name)$size)
volume_signal_code <- readChar(volume_indicator_file_name,
file.info(volume_indicator_file_name)$size)
dt.alpha_list <- data.table()
# Get volatility combinations
id <- 1
for (i in 1:(length(alpha_list)-1)){
for (j in 2:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
}
# Get volume combinations
for (j in 1:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, volume_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
dt.alpha_list
dt.temp <- dt.alpha_list[id == i]
dt.temp
nchar(dt.temp$code)
r
parent_dir
library(data.table)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
parent_dir <- getwd()
alpha_list <- list.files(paste0(parent_dir, "/alpha_list"))
volatility_indicator_file_name <- paste0(parent_dir, "/indicator_list/volatility_signal.txt")
volume_indicator_file_name <- paste0(parent_dir, "/indicator_list/volume_signal.txt")
volatility_signal_code <- readChar(volatility_indicator_file_name,
file.info(volatility_indicator_file_name)$size)
volume_signal_code <- readChar(volume_indicator_file_name,
file.info(volume_indicator_file_name)$size)
dt.alpha_list <- data.table()
# Get volatility combinations
id <- 1
for (i in 1:(length(alpha_list)-1)){
for (j in 2:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
}
# Get volume combinations
for (j in 1:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, volume_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
# Output strategy to folder
for (i in 1:nrow(dt.alpha_list)){
dt.temp <- dt.alpha_list[id == i]
writeChar(dt.temp$code, paste0(parent_dir, "/test_combinations/alpha_", i), nchars = nchar(dt.temp$code))
}
library(data.table)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
parent_dir <- getwd()
alpha_list <- list.files(paste0(parent_dir, "/alpha_list"))
volatility_indicator_file_name <- paste0(parent_dir, "/indicator_list/volatility_signal.txt")
volume_indicator_file_name <- paste0(parent_dir, "/indicator_list/volume_signal.txt")
volatility_signal_code <- readChar(volatility_indicator_file_name,
file.info(volatility_indicator_file_name)$size)
volume_signal_code <- readChar(volume_indicator_file_name,
file.info(volume_indicator_file_name)$size)
dt.alpha_list <- data.table()
# Get volatility combinations
id <- 1
for (i in 1:(length(alpha_list)-1)){
for (j in 2:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
}
# Get volume combinations
for (j in 1:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, volume_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
# Output strategy to folder
for (i in 1:nrow(dt.alpha_list)){
dt.temp <- dt.alpha_list[id == i]
writeChar(dt.temp$code, paste0(parent_dir, "/test_combinations/alpha_", i, ".txt"), nchars = nchar(dt.temp$code))
}
library(data.table)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
parent_dir <- getwd()
alpha_list <- list.files(paste0(parent_dir, "/alpha_list"))
volatility_indicator_file_name <- paste0(parent_dir, "/indicator_list/volatility_signal.txt")
volume_indicator_file_name <- paste0(parent_dir, "/indicator_list/volume_signal.txt")
volatility_signal_code <- readChar(volatility_indicator_file_name,
file.info(volatility_indicator_file_name)$size)
volume_signal_code <- readChar(volume_indicator_file_name,
file.info(volume_indicator_file_name)$size)
dt.alpha_list <- data.table()
# Get volatility combinations
id <- 1
for (i in 1:(length(alpha_list)-1)){
for (j in 2:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
}
# Get volume combinations
for (j in 1:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, volume_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
# Output strategy to folder
for (i in 1:nrow(dt.alpha_list)){
dt.temp <- dt.alpha_list[id == i]
writeChar(dt.temp$code, paste0(parent_dir, "/test_combinations/alpha_", i, ".txt"), nchars = nchar(dt.temp$code))
}
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
library(data.table)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
parent_dir <- getwd()
alpha_list <- list.files(paste0(parent_dir, "/alpha_list"))
volatility_indicator_file_name <- paste0(parent_dir, "/indicator_list/volatility_signal.txt")
volume_indicator_file_name <- paste0(parent_dir, "/indicator_list/volume_signal.txt")
volatility_signal_code <- readChar(volatility_indicator_file_name,
file.info(volatility_indicator_file_name)$size)
volume_signal_code <- readChar(volume_indicator_file_name,
file.info(volume_indicator_file_name)$size)
dt.alpha_list <- data.table()
# Get volatility combinations
id <- 1
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
i <- 1
j <- 2
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1
alpha_2
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_1_code_final
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
alpha_3_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_3_code_final <- paste0("b=", alpha_3_code, ";")
alpha_4_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_4_code_final <- paste0("a=", alpha_2_code, ";")
alpha_4_code_final
library(data.table)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
parent_dir <- getwd()
alpha_list <- list.files(paste0(parent_dir, "/alpha_list"))
volatility_indicator_file_name <- paste0(parent_dir, "/indicator_list/volatility_signal.txt")
volume_indicator_file_name <- paste0(parent_dir, "/indicator_list/volume_signal.txt")
volatility_signal_code <- readChar(volatility_indicator_file_name,
file.info(volatility_indicator_file_name)$size)
volume_signal_code <- readChar(volume_indicator_file_name,
file.info(volume_indicator_file_name)$size)
dt.alpha_list <- data.table()
# Get volatility combinations
id <- 1
for (i in 1:(length(alpha_list)-1)){
for (j in 2:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
alpha_3_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_3_code_final <- paste0("b=", alpha_3_code, ";")
alpha_4_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_4_code_final <- paste0("a=", alpha_2_code, ";")
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id+1,
code=my_alpha_final))
id <- id + 2
}
}
# Get volume combinations
for (j in 1:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, volume_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
# Output strategy to folder
for (i in 1:nrow(dt.alpha_list)){
dt.temp <- dt.alpha_list[id == i]
writeChar(dt.temp$code, paste0(parent_dir, "/test_combinations/alpha_", i, ".txt"), nchars = nchar(dt.temp$code))
}
dt.alpha_list
fit <- step(glm(mort~.,data=pollution))
library(SMPracticals)
fit <- step(glm(mort~.,data=pollution))
boxcox(fit)
plot.glm.diag(fit) # model adequate?
??boxcox
library(MASS)
boxcox(fit)
plot.glm.diag(fit) # model adequate?
library(data.table)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
parent_dir <- getwd()
alpha_list <- list.files(paste0(parent_dir, "/alpha_list"))
volatility_indicator_file_name <- paste0(parent_dir, "/indicator_list/volatility_signal.txt")
volume_indicator_file_name <- paste0(parent_dir, "/indicator_list/volume_signal.txt")
volatility_signal_code <- readChar(volatility_indicator_file_name,
file.info(volatility_indicator_file_name)$size)
volume_signal_code <- readChar(volume_indicator_file_name,
file.info(volume_indicator_file_name)$size)
dt.alpha_list <- data.table()
# Get volatility combinations
id <- 1
for (i in 1:(length(alpha_list)-1)){
for (j in 2:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_2 <- paste0(parent_dir, "/alpha_list/", alpha_list[j])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
alpha_2_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_2_code_final <- paste0("b=", alpha_2_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, alpha_2_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
alpha_3_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_3_code_final <- paste0("b=", alpha_3_code, ";")
alpha_4_code <- trimws(readChar(alpha_2,
file.info(alpha_2)$size), "both")
alpha_4_code_final <- paste0("a=", alpha_2_code, ";")
my_alpha_final_2 <- paste0(alpha_3_code_final, alpha_4_code_final, volatility_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id+1,
code=my_alpha_final_2))
id <- id + 2
}
}
# Get volume combinations
for (j in 1:length(alpha_list)){
alpha_1 <- paste0(parent_dir, "/alpha_list/", alpha_list[i])
alpha_1_code <- trimws(readChar(alpha_1,
file.info(alpha_1)$size), "both")
alpha_1_code_final <- paste0("a=", alpha_1_code, ";")
my_alpha_final <- paste0(alpha_1_code_final, volume_signal_code)
dt.alpha_list <- rbind(dt.alpha_list,
data.table(id=id,
code=my_alpha_final))
id <- id + 1
}
# Output strategy to folder
for (i in 1:nrow(dt.alpha_list)){
dt.temp <- dt.alpha_list[id == i]
writeChar(dt.temp$code, paste0(parent_dir, "/test_combinations/alpha_", i, ".txt"), nchars = nchar(dt.temp$code))
}
all_var_model <- glm(mort ~., data=pollution)
print(all_var_model)
print(min_AIC_model)
min_AIC_model <- glm(mort ~ prec + jant + jult + popn + educ + dens + nonw, data=pollution)
print(min_AIC_model)
plot.glm.diag(min_AIC_model)
pairs(resid(lm(cbind(log(mort),hc,nox,so)~.,data=pollution)))
min_AIC_model_with_population <- glm(mort ~ prec + jant + jult + popn + educ + dens + nonw + hc + nox + so, data=pollution)
print(min_AIC_model_with_population)
plot.glm.diag(min_AIC_model_with_population)
rfit <- lm.ridge(mort~.-hc-nox,data=pollution,lambda=seq(0,20,0.01))
plot(rfit)
select(rfit)
lqs_fit <- lqs(mort ~ prec + jant + jult + popn + educ + dens + nonw + hc + nox + so, data=pollution)
print(lqs_fit)
rlm_fit <- rlm(mort ~ prec + jant + jult + popn + educ + dens + nonw + hc + nox + so, data=pollution)
print(rlm_fit)
print(rfit)
select(rfit)
??select
?select
rfit <- lm.ridge(mort~.-hc-nox,data=pollution,lambda=4.659869)
print(rfit)
rfit <- lm.ridge(mort~.-hc-nox,data=pollution,lambda=4.659869, model = TRUE)
print(rfit)
rfit <- lm.ridge(mort~.-hc-nox,data=pollution,lambda=4.659869)
print(rfit)
??population
??pollution
library(SMPracticals)
library(MASS)
pairs(pollution)
pairs(pollution[,c(1:3,15:16)]) # association of mortality with weather
pairs(pollution[,c(4:11,16)]) # and social factors
pairs(pollution[,c(12:14,16)]) # and pollution measures
fit <- step(glm(mort~.-hc-nox-so,data=pollution))
boxcox(fit)
plot.glm.diag(fit) # model adequate?
fit <- update(fit,log(mort)~.) # try log transform of response
plot.glm.diag(fit) # model adequate?
fit <- step(glm(mort~.,data=pollution))
boxcox(fit)
plot.glm.diag(fit) # model adequate?
all_var_model <- glm(mort ~., data=pollution)
print(all_var_model)
min_AIC_model <- glm(mort ~ prec + jant + jult + popn + educ + dens + nonw, data=pollution)
print(min_AIC_model)
plot.glm.diag(min_AIC_model)
pairs(resid(lm(cbind(log(mort),hc,nox,so)~.,data=pollution)))
min_AIC_model_with_population <- glm(mort ~ prec + jant + jult + popn + educ + dens + nonw + hc + nox + so, data=pollution)
print(min_AIC_model_with_population)
plot.glm.diag(min_AIC_model_with_population)
rfit <- lm.ridge(mort~.-hc-nox,data=pollution,lambda=seq(0,20,0.01))
plot(rfit)
select(rfit)
rfit <- lm.ridge(mort~.-hc-nox,data=pollution,lambda=4.659869)
print(rfit)
lqs_fit <- lqs(mort ~ prec + jant + jult + popn + educ + dens + nonw + hc + nox + so, data=pollution)
print(lqs_fit)
rlm_fit <- rlm(mort ~ prec + jant + jult + popn + educ + dens + nonw + hc + nox + so, data=pollution)
print(rlm_fit)
df_docvisists <- read.csv("docvisits.asc")
df_docvisists
data.table(df_docvisists)
library(data.table)
df_docvisists <- fread("docvisits.asc")
df_docvisists
library(data.table)
df_docvisists <- fread("docvisits.asc")
df_docvisists
df_docvisists <- data.frame(df_docvisists)
df_docvisists
poisson_glm <- glm(dvisits~., data=df_docvisists)
poisson_glm <- glm(dvisits~., family="poisson", data=df_docvisists)
poisson_glm
library(AER)
install.packages("AER")
poisson_glm <- glm(dvisits~., family="poisson", data=df_docvisists)
poisson_glm
dispersiontest(poisson_glm, trafo=1)
library(AER)
dispersiontest(poisson_glm, trafo=1)
poisson_glm <- glm(dvisits~., family="poisson", data=df_docvisists)
summary(poisson_glm)
library(RSelenium)
library(rvest)
library(data.table)
library(glue)
library(jsonlite)
url = "https://websim.worldquantvrc.com/simulate"
driver <- rsDriver(browser=c("chrome"), port = 4444L)
remDr <- driver[["client"]]
remDr$navigate(url)
remDr$closeall()
rm(driver)
gc()
url = "http://websim.worldquantvrc.com/simulate"
driver <- rsDriver(browser=c("chrome"), port = 4444L)
remDr <- driver[["client"]]
remDr$navigate(url)
remDr$closeall()
rm(driver)
gc()
url = "http://websim.worldquantvrc.com/simulate"
driver <- rsDriver(browser=c("chrome"), port = 4444L)
remDr$closeall()
rm(driver)
gc()
update.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
library(RSelenium)
library(rvest)
library(data.table)
library(glue)
library(jsonlite)
driver <- rsDriver(browser=c("chrome"), port = 4444L)
url = "http://websim.worldquantvrc.com/simulate"
driver <- rsDriver(browser=c("chrome"), port = 4444L)
library(RSelenium)
library(rvest)
library(data.table)
library(glue)
library(jsonlite)
url = "http://websim.worldquantvrc.com/simulate"
remove.packages("RSelenium", lib="~/R/win-library/3.4")
install.packages("RSelenium")
library(RSelenium)
remove.packages("RSelenium", lib="~/R/win-library/3.4")
